# -*- mode: ruby -*-
# # # vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

config_file = YAML.load_file(ENV['KUBE_VIRTDEPLOY_CONFIG'])

token = config_file['cluster']['token']
bootstrap = config_file['cluster']['bootstrap']
kubectl = config_file['cluster']['kubectl']
kubelet = config_file['cluster']['kubelet']

cluster = config_file['cluster']
vm = config_file['cluster']['vm']
server = config_file['cluster']['server']
workers = config_file['cluster']['workers']

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.provider :libvirt do |libvirt|
    libvirt.driver = "kvm"
    if vm['additional-disk-size'] != 0 then
      libvirt.storage :file, :size => vm['additional-disk-size']
    end
  end

  if vm['additional-disk-size'] != 0 then
    config.vm.provision "shell", privileged: true, path: "../scripts/add-additional-disk.sh", args: [vm['additional-disk-filesystem']]
  end

  config.vm.box = vm['box']
  config.vm.box_version = vm['version']

  config.vm.provision "shell", privileged: true, inline: "echo root:vagrant | chpasswd"
  config.vm.provision "shell", privileged: true, inline: "route add default gw 10.20.90.1"

  config.vm.provision "shell", privileged: true, path: "../scripts/resize-fs.sh"

  config.vm.provision "shell", privileged: true, path: "../scripts/disable_systemd-resolved.sh"
  config.vm.provision "shell", privileged: true, path: "../scripts/install_packages.sh"
  config.vm.provision "shell", privileged: true, path: "../scripts/install_modules.sh"

  # Worker nodes
  workers.each do |worker|
    hostname = "#{cluster['prefix']}-#{worker['name']}"
    ip = "#{worker['ip']}"

    config.vm.define "#{hostname}" do |node|
      node.vm.hostname = "#{hostname}"
      node.vm.network "public_network",
        :dev => "br0",
        :mode => "bridge",
        :type => "bridge",
        :ip => "#{ip}",
        :netmask => "255.255.254.0"
      node.vm.provider "libvirt" do |v|
        v.cpus = vm['cpus']
        v.memory = vm['memory']
        v.machine_virtual_size = vm['disk-size']
      end

      if bootstrap['name'] == 'rke2'
        node.vm.provision "shell", privileged: true, path: "../scripts/install_rke2-agent.sh", args: [bootstrap['version'], "#{token}", "https://#{server['ip']}:9345", kubelet['log-level'], "#{ip}"]
      elsif bootstrap['name'] == 'k3s'
        node.vm.provision "shell", privileged: true, path: "../scripts/install_k3s-agent.sh", args: [bootstrap['version'], "#{token}", "https://#{server['ip']}:6443", kubelet['log-level']]
      end
    end
  end
end
