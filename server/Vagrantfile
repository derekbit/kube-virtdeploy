# -*- mode: ruby -*-
# # # vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

config_file = YAML.load_file('../config.yaml')
cluster = config_file['cluster']

bootstrap = config_file['cluster']['bootstrap']
kubectl = config_file['cluster']['kubectl']

vm = config_file['cluster']['vm']
server = config_file['cluster']['server']

hostname = "#{cluster['prefix']}-#{server['name']}"
ip = "#{server['ip']}"

$write_rke2_config=<<SCRIPT
cat <<EOF > /etc/rancher/rke2/config.yaml
token: ${1}
node-external-ip: ${2}
node-ip: ${2}
kubelet-arg: "--v=4"
EOF
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.provider :libvirt do |libvirt|
    libvirt.driver = "kvm"
  end

  config.vm.box = vm['box']
  config.vm.box_version = vm['version']

  config.vm.provision "net",
    type: "shell",
    path: "../scripts/fix.generic-ubuntu-dns.sh",
    privileged: true,
    run: "always"

  config.vm.provision "shell",
    run: "always",
    inline: "route add default gw 10.20.90.1"

  config.vm.provision "shell", privileged: true, inline: <<-SHELL
    set -e -x -u
    export DEBIAN_FRONTEND=noninteractive

    apt-get update -y
    apt-get install -y git vim curl build-essential openssh-server
    apt-get install -y jq open-iscsi nfs-common
  SHELL

  if bootstrap['name'] == 'rke2'
    config.vm.provision "shell", privileged: true, inline: <<-SHELL
      set -e -x -u
      export DEBIAN_FRONTEND=noninteractive

      echo "export CRI_CONFIG_FILE=/var/lib/rancher/rke2/agent/etc/crictl.yaml" >> /root/.bashrc
      echo "export PATH=$PATH:/var/lib/rancher/rke2/bin" >> /root/.bashrc
    SHELL
  elsif bootstrap['name'] == 'k3s'
    config.vm.provision "shell", privileged: true, inline: <<-SHELL
      set -e -x -u
      export DEBIAN_FRONTEND=noninteractive

      wget https://dl.k8s.io/release/#{kubectl['version']}/bin/linux/amd64/kubectl -P /usr/local/bin
      chmod 755 /usr/local/bin/kubectl
    SHELL
  end

  # Server node
  config.vm.define "#{hostname}" do |node|
    node.vm.hostname = "#{hostname}"
    node.vm.network "public_network",
      :dev => "br0",
      :mode => "bridge",
      :type => "bridge",
      :ip => "#{ip}",
      :netmask => "255.255.254.0"

    node.vm.provider "libvirt" do |v|
      v.cpus = vm['cpus']
      v.memory = vm['memory']
    end

    # Start master service
    if bootstrap['name'] == 'rke2'
      node.vm.provision "shell", privileged: true, inline: "sh -c 'echo export KUBECONFIG=/etc/rancher/rke2/rke2.yaml >> /root/.bashrc'"
      node.vm.provision "shell", privileged: true, inline: "sh -c 'echo export PATH=$PATH:/var/lib/rancher/rke2/bin >> /root/.bashrc'"
      node.vm.provision "shell", privileged: true, inline: "curl -sfL https://get.rke2.io | sh -"
      node.vm.provision "shell", privileged: true, inline: "systemctl enable rke2-server.service"
      node.vm.provision "shell", privileged: true, inline: "mkdir -p /etc/rancher/rke2"
      node.vm.provision "shell", privileged: true, inline: $write_rke2_config, args: [cluster['token'], "#{ip}"]
      node.vm.provision "shell", privileged: true, inline: "systemctl start rke2-server.service"
    elsif bootstrap['name'] == 'k3s'
      node.vm.provision "shell", privileged: true, inline: "mkdir -p /etc/rancher/k3s"
      node.vm.provision "shell", privileged: true, inline: <<-SHELL
        set -e -x -u
        export DEBIAN_FRONTEND=noninteractive

        export INSTALL_K3S_VERSION=#{bootstrap['version']}
        curl -sfL https://get.k3s.io | sh -
        mkdir -p /root/.kube
        cp -a /etc/rancher/k3s/k3s.yaml /root/.kube/config
      SHELL
    end

    # Install docker
    node.vm.provision "shell", privileged: true, inline: <<-SHELL
      set -e -x -u
      export DEBIAN_FRONTEND=noninteractive

      apt-get install -y apt-transport-https ca-certificates gnupg lsb-release
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      apt-get update -y
      apt-get install -y docker-ce docker-ce-cli containerd.io

      echo "root:vagrant" | chpasswd

      echo "source <(kubectl completion bash)" >> /root/.bashrc
      echo "alias k='kubectl'" >> /root/.bashrc
      echo "complete -F __start_kubectl k" >> /root/.bashrc
      echo "alias kl='kubectl -n longhorn-system'" >> /root/.bashrc
      echo "complete -F __start_kubectl kl" >> /root/.bashrc

      git config --global user.name "Derek Su"
      git config --global user.email derek.su@suse.com
      git config --global core.editor vim
    SHELL
  end
end
